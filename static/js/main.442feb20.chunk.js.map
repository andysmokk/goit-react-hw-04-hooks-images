{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ButtonLoadMore/ButtonLoadMore.module.css","components/LoaderSpinner/LoaderSpinner.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","services/imagesApi.js","components/LoaderSpinner/LoaderSpinner.jsx","components/ButtonLoadMore/ButtonLoadMore.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","imageName","setImageName","className","s","SearchForm","e","preventDefault","trim","toast","info","type","SearchFormButton","SearchFormButtonLabel","name","value","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","target","ImageGalleryItem","images","map","image","src","webformatURL","alt","tags","ImageGalleryItemImage","largeImageURL","id","api","fetchImages","page","fetch","then","response","json","LoaderSpinner","loader","color","height","width","timeout","ButtonLoadMore","state","loading","buttonLoadMore","props","loadMore","setState","setTimeout","imagesAPI","hits","length","catch","error","console","log","finally","prevProps","prevState","this","Button","onClick","Component","Status","ImageGallery","onOpenModal","setImages","status","setStatus","useEffect","window","scrollTo","top","document","documentElement","scrollHeight","behavior","title","moreImages","modalRoot","querySelector","Modal","children","onCloseModal","addEventListener","onKeyDown","removeEventListener","code","createPortal","Overlay","currentTarget","App","showModal","currentImage","toggleModal","nodeName","dataset","onSubmitForm","autoClose","position","transition","Zoom","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.442feb20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__FF1-w\",\"title\":\"ImageGallery_title__2UkS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2IjDc\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1YBuU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__wo4vi\",\"Modal\":\"Modal_Modal__2ZAdq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ButtonLoadMore_Button__1FRcQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"LoaderSpinner_loader__3LvQr\"};","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport s from './Searchbar.module.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [imageName, setImageName] = useState('');\r\n\r\n  const onSubmitForm = e => {\r\n    // const { imageName } = this.state;\r\n    // const { onSubmit } = this.props;\r\n\r\n    e.preventDefault();\r\n\r\n    if (imageName.trim() === '') {\r\n      return toast.info('Введите название картинки!');\r\n    }\r\n\r\n    onSubmit(imageName);\r\n    // this.setState({ imageName: '' });\r\n    setImageName('');\r\n  };\r\n\r\n  const onChangeImageName = ({ target }) => {\r\n    // this.setState({ imageName: target.value });\r\n    setImageName(target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={onSubmitForm}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            name=\"imageName\"\r\n            value={imageName}\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={onChangeImageName}\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\n// class oldSearchbar extends Component {\r\n//   state = {\r\n//     imageName: '',\r\n//   };\r\n\r\n//   onSubmitForm = e => {\r\n//     const { imageName } = this.state;\r\n//     const { onSubmit } = this.props;\r\n\r\n//     e.preventDefault();\r\n\r\n//     if (imageName.trim() === '') {\r\n//       return toast.info('Введите название картинки!');\r\n//     }\r\n\r\n//     onSubmit(imageName);\r\n//     this.setState({ imageName: '' });\r\n//   };\r\n\r\n//   onChangeImageName = ({ target }) => {\r\n//     this.setState({ imageName: target.value });\r\n//   };\r\n\r\n//   render() {\r\n//     const { state, onSubmitForm, onChangeImageName } = this;\r\n//     const { imageName } = state;\r\n\r\n//     return (\r\n//       <>\r\n//         <header className={s.Searchbar}>\r\n//           <form className={s.SearchForm} onSubmit={onSubmitForm}>\r\n//             <button type=\"submit\" className={s.SearchFormButton}>\r\n//               <span className={s.SearchFormButtonLabel}>Search</span>\r\n//             </button>\r\n\r\n//             <input\r\n//               name=\"imageName\"\r\n//               value={imageName}\r\n//               className={s.SearchFormInput}\r\n//               type=\"text\"\r\n//               autoComplete=\"off\"\r\n//               autoFocus\r\n//               placeholder=\"Search images and photos\"\r\n//               onChange={onChangeImageName}\r\n//             />\r\n//           </form>\r\n//         </header>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Searchbar;\r\n","// import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nexport default function ImageGalleryItem({ images }) {\r\n  return (\r\n    <>\r\n      {images &&\r\n        images.map(image => (\r\n          <li className={s.ImageGalleryItem} key={image.id}>\r\n            <img\r\n              src={image.webformatURL}\r\n              alt={image.tags}\r\n              className={s.ImageGalleryItemImage}\r\n              data-image={image.largeImageURL}\r\n            />\r\n          </li>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\n// class ImageGalleryItem extends Component {\r\n//   static propTypes = {\r\n//     images: PropTypes.array.isRequired,\r\n//   };\r\n\r\n//   render() {\r\n//     const { images } = this.props;\r\n//     return (\r\n//       <>\r\n//         {images &&\r\n//           images.map(image => (\r\n//             <li className={s.ImageGalleryItem} key={image.id}>\r\n//               <img\r\n//                 src={image.webformatURL}\r\n//                 alt={image.tags}\r\n//                 className={s.ImageGalleryItemImage}\r\n//                 data-image={image.largeImageURL}\r\n//               />\r\n//             </li>\r\n//           ))}\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ImageGalleryItem;\r\n","const BASE_URL = 'https://pixabay.com/api/';\r\nconst KEY = '23025169-5a1370e5bf826cff1ac1e8732';\r\n\r\nfunction fetchImages(name, page) {\r\n  return fetch(\r\n    `${BASE_URL}?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => response.json());\r\n}\r\n\r\nconst api = {\r\n  fetchImages,\r\n};\r\n\r\nexport default api;\r\n","import Loader from 'react-loader-spinner';\r\nimport s from './LoaderSpinner.module.css';\r\n\r\nconst LoaderSpinner = () => {\r\n  return (\r\n    <div className={s.loader}>\r\n      <Loader\r\n        type=\"Bars\"\r\n        color=\"#3f51b5\"\r\n        height={200}\r\n        width={200}\r\n        timeout={1500}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoaderSpinner;\r\n","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ButtonLoadMore.module.css';\r\nimport imagesAPI from '../../services/imagesApi';\r\nimport LoaderSpinner from '../LoaderSpinner/LoaderSpinner';\r\n\r\nclass ButtonLoadMore extends Component {\r\n  static propTypes = {\r\n    imageName: PropTypes.string.isRequired,\r\n    images: PropTypes.array.isRequired,\r\n    loadMore: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    page: 1,\r\n    loading: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { imageName } = this.props;\r\n\r\n    if (prevProps.imageName !== imageName) {\r\n      this.setState({ page: 1, imageName: '' });\r\n    }\r\n  }\r\n\r\n  buttonLoadMore = () => {\r\n    const { imageName, loadMore } = this.props;\r\n    const { page } = this.state;\r\n    this.setState({ loading: true });\r\n    setTimeout(() => {\r\n      imagesAPI\r\n        .fetchImages(imageName, page + 1)\r\n        .then(images => {\r\n          images.hits.length === 0\r\n            ? toast.info(\r\n                `Картинки с названием ${`\"${imageName}\"`} закончились. Введите новое название.`,\r\n              )\r\n            : loadMore(images.hits);\r\n        })\r\n        .then(this.setState({ page: page + 1 }))\r\n        .catch(error => console.log(error))\r\n        .finally(() => this.setState({ loading: false }));\r\n    }, 1000);\r\n  };\r\n\r\n  render() {\r\n    const { state, buttonLoadMore } = this;\r\n    const { loading } = state;\r\n    return (\r\n      <button type=\"button\" className={s.Button} onClick={buttonLoadMore}>\r\n        {loading ? <LoaderSpinner /> : <p>Load more</p>}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonLoadMore;\r\n","import { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport imagesAPI from '../../services/imagesApi';\r\nimport ButtonLoadMore from '../ButtonLoadMore/ButtonLoadMore';\r\nimport LoaderSpinner from '../LoaderSpinner/LoaderSpinner';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n};\r\n\r\nexport default function ImageGallery({ imageName, onOpenModal }) {\r\n  const [images, setImages] = useState([]);\r\n  const [page] = useState(1);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n\r\n  useEffect(() => {\r\n    if (!imageName) {\r\n      return;\r\n    }\r\n\r\n    setStatus(Status.PENDING);\r\n\r\n    setTimeout(() => {\r\n      imagesAPI\r\n        .fetchImages(imageName, page)\r\n        .then(images => {\r\n          if (images.hits.length > 0) {\r\n            setImages(images.hits);\r\n            setStatus(Status.RESOLVED);\r\n          } else\r\n            toast.info(\r\n              `Картинок с названием ${`\"${imageName}\"`} нет. Введите новое название.`,\r\n            );\r\n        })\r\n        .catch(error => console.log(error));\r\n    }, 1000);\r\n  }, [imageName, page]);\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n  });\r\n\r\n  const loadMore = moreImages => {\r\n    // const { images } = this.state;\r\n\r\n    // this.setState({ images: [...images, ...moreImages] });\r\n    setImages([...images, ...moreImages]);\r\n  };\r\n\r\n  if (status === Status.IDLE) {\r\n    return <h2 className={s.title}>Введите название картинки</h2>;\r\n  }\r\n\r\n  if (status === Status.PENDING) {\r\n    return <LoaderSpinner />;\r\n  }\r\n\r\n  if (status === Status.RESOLVED) {\r\n    return (\r\n      <>\r\n        <ul className={s.ImageGallery} onClick={onOpenModal}>\r\n          <ImageGalleryItem images={images} />\r\n        </ul>\r\n        {images.length > 0 && (\r\n          <ButtonLoadMore\r\n            images={images}\r\n            imageName={imageName}\r\n            loadMore={loadMore}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// class ImageGallery extends Component {\r\n//   state = {\r\n//     images: [],\r\n//     page: 1,\r\n//     status: 'idle',\r\n//   };\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     const { imageName } = this.props;\r\n//     const { page, images } = this.state;\r\n\r\n//     if (prevProps.imageName !== imageName) {\r\n//       this.setState({ status: 'pending' });\r\n\r\n//       setTimeout(() => {\r\n//         imagesAPI\r\n//           .fetchImages(imageName, page)\r\n//           .then(images => {\r\n//             images.hits.length === 0\r\n//               ? toast.info(\r\n//                   `Картинок с названием ${`\"${imageName}\"`} нет. Введите новое название.`,\r\n//                 )\r\n//               : this.setState({ images: images.hits, status: 'resolved' });\r\n//           })\r\n//           .catch(error => console.log(error));\r\n//       }, 1000);\r\n//     }\r\n\r\n//     if (prevState.images !== images) {\r\n//       window.scrollTo({\r\n//         top: document.documentElement.scrollHeight,\r\n//         behavior: 'smooth',\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   loadMore = moreImages => {\r\n//     const { images } = this.state;\r\n\r\n//     this.setState({ images: [...images, ...moreImages] });\r\n//   };\r\n\r\n//   render() {\r\n//     const { state, loadMore } = this;\r\n//     const { images, status } = state;\r\n//     const { imageName, onOpenModal } = this.props;\r\n\r\n//     if (status === 'idle') {\r\n//       return <h2 className={s.title}>Введите название картинки</h2>;\r\n//     }\r\n\r\n//     if (status === 'pending') {\r\n//       return <LoaderSpinner />;\r\n//     }\r\n\r\n//     if (status === 'resolved') {\r\n//       return (\r\n//         <>\r\n//           <ul className={s.ImageGallery} onClick={onOpenModal}>\r\n//             <ImageGalleryItem images={images} />\r\n//           </ul>\r\n//           {images.length > 0 && (\r\n//             <ButtonLoadMore\r\n//               images={images}\r\n//               imageName={imageName}\r\n//               loadMore={loadMore}\r\n//             />\r\n//           )}\r\n//         </>\r\n//       );\r\n//     }\r\n//   }\r\n// }\r\n\r\n// export default ImageGallery;\r\n\r\n// return (\r\n//   <>\r\n//     {!imageName && <h2 className={s.title}>Введите название картинки</h2>}\r\n//     <ul className={s.ImageGallery} onClick={onOpenModal}>\r\n//       <ImageGalleryItem images={images} />\r\n//     </ul>\r\n//     {images.length > 0 && (\r\n//       <ButtonLoadMore\r\n//         images={images}\r\n//         imageName={imageName}\r\n//         loadMore={loadMore}\r\n//       />\r\n//     )}\r\n//     {loading && <LoaderSpinner />}\r\n//   </>\r\n// );\r\n","import { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ children, onCloseModal }) {\r\n  // useEffect(() => {\r\n  //   document.addEventListener('keydown', onKeyDown);\r\n  // }, [onKeyDown]);\r\n\r\n  useEffect(() => {\r\n    // console.log('useEffect', Date.now());\r\n    // console.log('children', children);\r\n\r\n    document.addEventListener('keydown', onKeyDown);\r\n    return () => {\r\n      document.removeEventListener('keydown', onKeyDown);\r\n    };\r\n  });\r\n\r\n  const onKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onCloseModal();\r\n    }\r\n  };\r\n\r\n  const onOverlayModalClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      onCloseModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={onOverlayModalClick}>\r\n      <div className={s.Modal}>{children}</div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.object.isRequired,\r\n  onCloseModal: PropTypes.func.isRequired,\r\n};\r\n\r\n// class Modal extends Component {\r\n//   static propTypes = {\r\n//     children: PropTypes.object.isRequired,\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     document.addEventListener('keydown', this.onKeyDown);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     document.removeEventListener('keydown', this.onKeyDown);\r\n//   }\r\n\r\n//   onKeyDown = e => {\r\n//     if (e.code === 'Escape') {\r\n//       this.props.onCloseModal();\r\n//     }\r\n//   };\r\n\r\n//   onOverlayModalClick = e => {\r\n//     if (e.target === e.currentTarget) {\r\n//       this.props.onCloseModal();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     const { children } = this.props;\r\n//     const { onOverlayModalClick } = this;\r\n\r\n//     return createPortal(\r\n//       <div className={s.Overlay} onClick={onOverlayModalClick}>\r\n//         <div className={s.Modal}>{children}</div>\r\n//       </div>,\r\n//       modalRoot,\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Modal;\r\n","import React, { Component } from 'react';\r\nimport { ToastContainer, Zoom } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './App.css';\r\nimport Searchbar from './components/Searchbar/Searchbar';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport Modal from './components/Modal/Modal';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    imageName: 0,\r\n    showModal: false,\r\n    currentImage: '',\r\n    page: 1,\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(state => ({ showModal: !state.showModal }));\r\n  };\r\n\r\n  onOpenModal = ({ target }) => {\r\n    if (target.nodeName === 'IMG') {\r\n      this.setState(({ showModal }) => ({\r\n        currentImage: target.dataset.image,\r\n        showModal: !showModal,\r\n      }));\r\n    }\r\n  };\r\n\r\n  onSubmitForm = imageName => {\r\n    this.setState({ imageName: imageName });\r\n  };\r\n\r\n  render() {\r\n    const { state, toggleModal, onSubmitForm, onOpenModal } = this;\r\n    const { showModal, currentImage, imageName } = state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {showModal && (\r\n          <Modal onCloseModal={toggleModal}>\r\n            <img src={currentImage} alt=\"\" width=\"950\" />\r\n          </Modal>\r\n        )}\r\n        <Searchbar onSubmit={onSubmitForm} />\r\n        <ImageGallery imageName={imageName} onOpenModal={onOpenModal} />\r\n        <ToastContainer\r\n          autoClose={3000}\r\n          position=\"bottom-right\"\r\n          transition={Zoom}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3sPRp\",\"SearchForm\":\"Searchbar_SearchForm__2qCZz\",\"SearchFormButton\":\"Searchbar_SearchFormButton__ei_t2\",\"SearchFormBbutton\":\"Searchbar_SearchFormBbutton__3nYvT\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__25NaT\",\"SearchFormInput\":\"Searchbar_SearchFormInput__dI9Wx\"};"],"sourceRoot":""}